$red: #df0017;
$green: #978F63;
$backgrounds: (
	'red': url("../app/images/annie-spratt-unsplash.jpg"),
	'green': url("../app/images/nate-johnston-unsplash.jpg")
);

html {
	font-size: 20px;
	height: 100%;
	display: flex;
	flex-direction: column;

	@media (max-width: 767px) {
		font-size: 16px;
	}
}

body {
	margin: 0;
	font-family: 'Courgette', cursive;
	position: relative;

	// make element stretch to the full height of parent - in case of short text, for long text it is not needed
	flex-grow: 1; 
	display: flex;
	flex-direction: column;

}

.visuallyhidden { 
    position: absolute !important;
    height: 1px; 
    width: 1px;
    overflow: hidden;
    clip: rect(1px, 1px, 1px, 1px);
    white-space: nowrap;
}

@mixin mobile-containers {
	width: 100%;
	height: 100%;
	position: absolute;
}

@mixin mobile-text {
	background: rgba(0,0,0,0.5);
	color: #fff;
}

@mixin button-mobile {
	font-size: 0.8rem;
}

%button {
	height: 2rem;
	box-sizing: border-box;
	font-size: 0.7rem;
}

main {
	display: flex;
	flex-grow: 1; // makes element stretch to the full height of parent*/
	margin: 0;

	@media (max-width: 767px) {
		// if <main> does not have the full height of parent, then the flex properties for .text-container 
		// will not center the text
		flex-grow: 0; 
	}

	.text-container {
		width: 50%;
		display: flex;
		flex-direction: column;
		justify-content: center;
		position: relative;
		overflow: hidden;
		transition: background 4s ease-in-out;

		@media (min-width: 768px) {
			.red & {
				background: $red;
			}

			.green & {
				background: $green;
			}
		}

		@media (max-width: 767px) {
			// @include mobile-containers; removed to place the quote on top

			width: 100%;
			background: transparent;
			z-index: 1;
			position: static;
		}

		.quote-container {
			width: 80%;
			margin: 1rem auto 2.5rem;
			font-size: 1.5rem;

			@media (max-width: 767px) {
				@include mobile-text;

				padding: 0 1rem;
			}
		}

		.get-quote-button {
			@extend %button;

			align-self: flex-end;
			margin: 1rem 20% 0;
			border-radius: 45%;
			border: 0.1rem solid #000;
			font-family: 'Courgette', cursive;
			font-size: 0.7rem;

			@media (max-width: 767px) {
				@include mobile-text;
				@include button-mobile;

				position: absolute;
				left: 0;
				bottom: 0;
				margin-left: 0;
				border-radius: 0;
				font-family: sans-serif;
			}

			&:hover {
				cursor: pointer;
			}
		}
	}

	.image-container {
		background-image: map-get($backgrounds, 'red');
		background-size: cover;
		background-position: bottom left 30%;
		width: 50%;
		transition: background 4s ease-in-out;

		.red & {
			background-image: map-get($backgrounds, 'red');
		}

		.green & {
			background-image: map-get($backgrounds, 'green');
		}

		@media (max-width: 767px) {
			@include mobile-containers;
		}
	}
}

footer {
	position: absolute;
	bottom: 0;
	left: 0;
	right: 0;
	text-align: center;
	font-size: 0.5rem;
	color: #fff;
}

.credits-link {
	@extend %button;

	background-color: rgba(0,0,0,0.3);
	padding: 0.2rem 0.4rem;
	color: #fff;
	text-decoration:none;
	font-family: sans-serif;
	font-size: 0.7rem;
	line-height: 1.8;
	display: inline-block;
	border-radius: 3px;
	position: absolute;
	bottom: 0;
	right: 0;

	@media (max-width: 767px) {
		@include button-mobile;

		line-height: 1.5;
		border: 0.1rem solid #000;
	}

	&__logo,
	&__author {
		display: inline-block;
		padding: 0.1rem;
	}
}

// use placeholder selector for decoration
%decoration {
	position: absolute;

	@media (max-width: 767px) {
		display: none;
	}
}

.decoration-top-right,
.decoration-bottom-right {
	@extend %decoration;
	right: 0;
}

.decoration-top-left,
.decoration-top-right {
	@extend %decoration;
	top: 0;
}

.decoration-bottom-left,
.decoration-bottom-right {
	@extend %decoration;
	bottom: 0;
}

@mixin circle($size, $background, $radius: 50%) {
	width: $size;
	height: $size; 
	background: $background;
	border-radius: $radius;
}

.circle-big {
	@include circle(6.25rem, rgba(0,0,0,0.8));
}

.circle-small {
	@include circle(1.55rem, transparent);

	border: 0.1rem solid #000;
	border-radius: 50%;
	position: absolute;
}

@mixin child-circle($xposition, $yposition) {
		&:nth-child(2) {
			#{$xposition}: -0.125rem;
			#{$yposition}: 3rem;
		}

		&:nth-child(3) {
			#{$xposition}: 1.25rem;
			#{$yposition}: 2.375rem;
		}

		&:nth-child(4) {
			#{$xposition}: 2.375rem;
			#{$yposition}: 1.375rem;
		}

		&:nth-child(5) {
			#{$xposition}: 2.875rem;
			#{$yposition}: 0;
		}
}

@mixin circle-small($whichBorder1, $whichBorder2, $borderColor, $radius: 0 50%) {
	border-#{$whichBorder1}: $borderColor;
	border-#{$whichBorder2}: $borderColor;
	border-radius: $radius;
}

.decoration-top-left {
	.circle-big {
		transform: translate(-50%, -50%);
	}

	.circle-small {
		@include circle-small(top, left, transparent);
		@include child-circle(left, top);
	}
}

.decoration-top-right {
	.circle-big {
		transform: translate(50%, -50%);
	}

	.circle-small {
		@include circle-small(top, right, transparent, 50% 0);
		@include child-circle(right, top);
	}
}

.decoration-bottom-left {
	.circle-big {
		transform: translate(-50%, 50%);
	}

	.circle-small {
		@include circle-small(bottom, left, transparent, 50% 0);
		@include child-circle(left, bottom);
	}
}

.decoration-bottom-right {
	.circle-big {
		transform: translate(50%, 50%);
	}

	.circle-small {
		@include circle-small(bottom, right, transparent);
		@include child-circle(right, bottom);
	}
}